/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var t={};(t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})})(t);const e=t=>{const e=document.createElement("p");return e.classList.add("todo-completion-status"),e.innerText=t?"Completed":"Pending",e},o=(t,e)=>{!0===t.completed?(e.classList.remove("todoCardRed"),e.classList.add("todoCardGreen")):!1===t.completed?(e.classList.remove("todoCardGreen"),e.classList.add("todoCardRed")):alert("something is wrong in teh refreshTodoItemCardColor function")},n=n=>{const d=document.createElement("div");return d.classList.add("todoCard"),d.appendChild((t=>{const e=document.createElement("h3");return e.classList.add("todo-title"),e.textContent=t,e})(n.title)),d.appendChild((t=>{const e=document.createElement("p");return e.classList.add("todo-description"),e.innerText=t,e})(n.description)),d.appendChild((t=>{const e=document.createElement("p");return e.classList.add("todo-due-date"),e.innerText=t,e})(n.dueDate)),d.appendChild((t=>{const e=document.createElement("p");return e.classList.add("todo-priority"),e.innerText=`Priority: ${t}`,"high"===t.toLowerCase()&&e.classList.add("todo-priority-high"),"medium"===t.toLowerCase()&&e.classList.add("todo-priority-medium"),"low"===t.toLowerCase()&&e.classList.add("todo-priority-low"),e})(n.priority)),d.appendChild((t=>{const e=document.createElement("p");return e.classList.add("todo-Notes-status"),e.innerText=t,e})(n.notes)),d.appendChild((t=>{const e=document.createElement("p");return e.classList.add("todo-Project-status"),e.innerText=`Project: ${t}`,e})(n.project)),d.appendChild(e(n.completed)),o(n,d),d.appendChild(((t,n)=>{const d=document.createElement("button");return d.classList.add("toggleCompletionStatus"),d.innerText="Toggle completion",d.addEventListener("click",(()=>{const d=n.querySelector(".todo-completion-status");var s;t.completed=!0!==(s=t.completed)&&(!1===s||void alert("Something is wrong in the code because the completion status is neither true nor false. on the toggleTodoItemCompletionStatus function"));const r=e(t.completed);n.replaceChild(r,d),o(t,n)})),d})(n,d)),d.appendChild((e=>{const o=document.createElement("button");return o.classList.add("deleteButton"),o.textContent="Delete ToDo",o.addEventListener("click",(()=>{console.log(e);const o=t.todoList.indexOf(e);t.todoList.splice(o,1),document.querySelector(".todoListContainer").innerHTML="",s(t.todoList)})),o})(n)),d},d=document.querySelector(".todoListContainer"),s=()=>{let t=(()=>{let t=localStorage.getItem("todoList");return null===t?(console.log("no todolist available in local storage"),null):JSON.parse(t)})();if(console.log(t),null===t||t.length<=0){console.log("no todos in this list");const t=document.createElement("p");t.innerText="Congratulations, no toDos left!",t.classList.add("noTodosText"),d.append(t)}else t.forEach((t=>{document.querySelector(".todoContainer").append(n(t))}))};let r=[];class i{constructor(t,e,o,n,d="no notes for now",s,r=!1){this.title=t,this.description=e,this.dueDate=o,this.priority=n,this.notes=d,this.project=["Default"].concat(s),this.completionStatus=r}}document.querySelector(".newTodoForm").addEventListener("submit",(t=>{t.preventDefault(),(t=>{r.push(t),console.log(r),(t=>{localStorage.setItem("todoList",JSON.stringify(t)),s()})(r)})(new i(t.target.newTodoTitle.value,t.target.newTodoDescription.value,t.target.newTodoDueDate.value,t.target.newTodoPriority.value,void 0,t.target.newTodoProject.value,!1))})),s()})();